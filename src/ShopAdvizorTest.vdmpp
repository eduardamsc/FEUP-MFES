class ShopAdvizorTest
 instance variables
 	m_retailer : Retailer := new Retailer("Pingo Doce");
 
 operations
	 private assertTrue: bool ==> ()
	 assertTrue(cond) == return
	 pre cond;
	
	 public testAddProductToRetailer: () ==> ()
	 testAddProductToRetailer() ==
	 (
	 	dcl brand : Brand := new Brand("Chip Mix");
	 	dcl product : Product := new Product("Bolachas", "Bolachas de Chocolate", brand);
	 	dcl info : Retailer`ItemInfo := mk_Retailer`ItemInfo(20, 2.1);
	 	m_retailer.insertProduct(product, info);
	 );
	 
	 public testAverageReviewRating : () ==> ()
	 testAverageReviewRating() == 
	 (
	 	dcl brand : Brand := new Brand("Chip Mix");
	 	dcl product : Product := new Product("Bolachas", "Bolachas de Chocolate", brand);
	 	
	 	assertTrue(product.getAvgRating() = nil);
	 	product.insertReview(new User("name","pass"), mk_Product`Review(1, "mau"));
	 	assertTrue(product.getAvgRating() = 1);
	 	product.insertReview(new User("name2","pass2"), mk_Product`Review(4, "bom"));
	 	assertTrue(product.getAvgRating() = 2.5);	 	
	 );
	 
	 public static main: () ==> ()
	 main() ==
	 (
	 	dcl test : ShopAdvizorTest := new ShopAdvizorTest();
	 	test.testAddProductToRetailer();
	 	test.testAverageReviewRating();
	 );
	 
end ShopAdvizorTest